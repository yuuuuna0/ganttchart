<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.weaverloft.ganttchart.mapper.UsersLogMapper">
    <!-- 1. 로그 남기기 -->
    <insert id="createLog" parameterType="java.util.Map">
        <selectKey resultType="java.lang.Integer" keyProperty="logNo" order="BEFORE">
            select USERS_LOG_LOG_NO_SEQ.nextval from DUAL
        </selectKey>
        insert into USERS_LOG(log_no, log_date, log_status,id)
        values (#{logNo},sysdate,#{logStatus},#{id})
    </insert>
    <!-- 2. 로그 전체 수 -->
    <select id="findUsersLogCount" resultType="java.lang.Integer">
        select count(*) from USERS_LOG
    </select>
    <!-- 3. 로그리스트 출력 -> 페이징, 검색 -->
    <select id="findUserLog" parameterType="java.util.Map" resultType="com.weaverloft.ganttchart.dto.UsersLog">
        select  *
        from (  select rownum idx, ul.*
                from (  select *
                        from USERS_LOG
                    ) ul
                 where 1=1
                    <if test="keyword !=null">
                        and ul.id like '%'||#{keyword}||'%'
                    </if>
            )
        <![CDATA[ where idx >= #{pageBegin} and idx <= #{pageEnd} ]]>
        order by LOG_DATE desc
    </select>
<!--    &lt;!&ndash; 4. 1주일동안 인증완료로 안 바뀐 아이디 찾기 (logStatus가 1주일동안 0->1 안변한) &ndash;&gt;-->
<!--    <select id="findUnAuthUsers" resultType="java.lang.String">-->
<!--        select id-->
<!--        from USERS_LOG-->
<!--        where LOG_STATUS=0-->
<!--        <![CDATA[ and log_date <= sysdate-7]]>-->
<!--          AND NOT EXISTS (-->
<!--                        SELECT *-->
<!--                        FROM USERS_LOG-->
<!--                        WHERE LOG_STATUS = 1-->
<!--                        )-->
<!--    </select>-->
    <!-- 5. 60일동안 로그인 안 한 아이디 찾기 (logStatus 10인지 60일이 지난 아이디)  -->
    <select id="findDormacyUsers" resultType="java.lang.String">
        select ul.id, ul.log_no, ul.log_status, ul.log_date
        from (
              select id, max(log_no) log_no
              from(
                    select *
                    from users_log
                    where log_status=10
                    order by log_no desc)
                        group by id) a
        join users_log ul on a.log_no =ul.log_no
        <![CDATA[ where ul.log_date <= sysdate-60]]>
    </select>
</mapper>