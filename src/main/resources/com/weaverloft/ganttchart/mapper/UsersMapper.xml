<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.weaverloft.ganttchart.mapper.UsersMapper">
    <!-- 1. 회원가입 -->
    <insert id="createUsers" parameterType="java.util.Map">
        insert into users(id,grade,password,name,photo,birth,gender,phone,address,email,AUTH_STATUS,AUTH_KEY,CREATE_DATE)
        values(#{id},0,#{password},#{name},#{photo},#{birth},0,#{phone},#{address},#{email},0,#{authKey},sysdate)
    </insert>
    <!--2. 회원 조회 -->
    <select id="findUsersById" parameterType="java.lang.String" resultType="com.weaverloft.ganttchart.dto.Users">
        select id, grade, password, name, photo, birth , gender, phone, address, email, auth_status, auth_key, CREATE_DATE
        from USERS where id = #{id}
    </select>
    <!--3. 정보 수정 -->
    <update id="updateUsers" parameterType="java.util.Map">
        update USERS
        set name=#{name}, PHOTO=#{photo}, BIRTH=#{birth}, GENDER=#{gender}, phone=#{phone}, ADDRESS=#{address}, EMAIL=#{email}
        where id=#{id}
    </update>
    <!-- 4. 비밀번호 수정 -->

    <!-- 4. 인증 완료 -->
    <update id="updateAuthStatus" parameterType="java.lang.String">
        update USERS set AUTH_STATUS=1 where id=#{id}
    </update>
    <!-- 7. 아이디 중복 체크 -->
    <select id="isExistedId" parameterType="java.lang.String" resultType="java.lang.Integer">
        select count(*) from USERS where id=#{id}
    </select>
    <!-- 6. 비밀번호 일치 확인-->
    <select id="isMatchPassword" parameterType="java.util.Map" resultType="java.lang.Integer">
        select count(*) from USERS where id=#{id} and password=#{password}
    </select>
    <!-- 이미지 업로드  -->
    <update id="updatePhoto" parameterType="java.util.Map">
        update users set PHOTO=#{photo} where id=#{id}
    </update>
    <!-- 이름, 이메일로 아이디 찾기 ==> 3자리+*표 -->
    <select id="findIdByNameEmail" parameterType="java.util.Map" resultType="java.lang.String">
        select substr(id,1,3) || RPAD('*',length(id)-3,'*')
        from users where NAME=#{name} and EMAIL=#{email}
    </select>
    <!-- 아이디, 이름, 이메일로 비밀번호 변경하기 ==> 유저 1 찾기 +  -->
    <select id="findPasswordByIdNameEmail" parameterType="java.util.Map" resultType="java.lang.Integer">
        select count(*) from USERS where ID=#{id} and name=#{name} and EMAIL=#{email}
    </select>
    <!-- 비밀번호 변경 -->
    <update id="updatePassword" parameterType="java.util.Map">
        update USERS set PASSWORD=#{password} where ID=#{id}
    </update>
    <!-- 회원 탈퇴 -->
    <delete id="deleteUsers" parameterType="java.lang.String">
        delete users where id=#{id}
    </delete>
    <!-- 12. 전체회원 수 -->
    <select id="findUsersCount" resultType="java.lang.Integer">
        select count(*) from USERS
    </select>
    <!-- 13. 회원리스트 출력 -> 페이징, 검색 -->
    <select id="findUserList" parameterType="java.util.Map" resultType="com.weaverloft.ganttchart.dto.Users">
        select  *
        from (  select rownum idx, u.*
                from (  select *
                        from users
                     ) u
                where 1=1
                <if test="keyword !=null">
                    and u.id like '%'||#{keyword}||'%'
                </if>
             )
        <![CDATA[ where idx >= #{pageBegin} and idx <= #{pageEnd} ]]>
    </select>
    <!-- 13. 회원리스트 출력 -> -->
    <select id="findUserList2" resultType="com.weaverloft.ganttchart.dto.Users">
        select  * from users
    </select>
</mapper>


    <!-- 8. 이메일, 이름으로 회원 존재여부 확인
    <select id="isExistedUsersByIdEmail" parameterType="java.util.Map" resultType="java.lang.Integer">
        select count(*) from USERS where id=#{id} and email=#{email}
    </select>
    -->
    <!-- 9. 메일 인증번호 업데이트
    <update id="updateMailKey" parameterType="com.weaverloft.ganttchart.dto.EmailAuth">
        UPDATE  EMAIL_AUTH
        SET mail_key = #{mailKey}
        WHERE id = #{id}
    </update>
    -->
    <!-- 10. 메일 인증여부 업데이트
    <update id="updateMailAuth" parameterType="com.weaverloft.ganttchart.dto.Users">
        UPDATE  users
        SET AUTH_STATUS = 1
        WHERE email = #{email}
    </update>
    -->