<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.weaverloft.ganttchart.mapper.UsersMapper">
    <resultMap id="userWithFile" type="com.weaverloft.ganttchart.dto.Users" autoMapping="true">
        <association property="file" javaType="com.weaverloft.ganttchart.dto.Files" autoMapping="true"/>
    </resultMap>
<!--1. 아이디로 회원 찾기-->
    <select id="findUserById" parameterType="java.lang.String" resultType="com.weaverloft.ganttchart.dto.Users">
        select * from users where u_id=#{uId}
    </select>
    <select id="findUserById2" parameterType="java.lang.String" resultMap="userWithFile">
        select u.*,f.* from users u
                        join files f on u.file_no=f.file_no
                 where u_id=#{uId}
    </select>
<!--2. 회원가입   -->
    <insert id="createUsers" parameterType="com.weaverloft.ganttchart.dto.Users">
        insert into USERS(U_ID,U_PASSWORD,U_NAME,U_EMAIL,U_GENDER,U_BIRTH,U_PHONE,U_CREATE_DATE,U_ADDRESS,U_ADDRESS2,AUTH,U_STATUS_NO,FILE_NO,U_AUTH_CODE,ENABLED)
        values (#{uId},#{uPassword},#{uName},#{uEmail},#{uGender},#{uBirth},#{uPhone},sysdate,#{uAddress},#{uAddress2},#{auth},1,0,#{uAuthCode},1)
    </insert>
<!--3. 로그인    -->
    <select id="login" parameterType="java.util.Map" resultType="com.weaverloft.ganttchart.dto.Users">
        select * from users where u_id=#{uId} and u_password=#{uPassword}
    </select>
<!--4. 상태번호 변경하기    -->
    <update id="updateUStatusNo" parameterType="java.util.Map">
        update users set u_status_no = #{uStatusNo} where u_id = #{uId}
    </update>
<!--5. 이름,이메일로 아이디리스트 찾기   -->
    <select id="findIdByNameEmail" parameterType="java.util.Map" resultType="java.lang.String">
        select u_id
        from users where u_name=#{uName} and u_email=#{uEmail}
    </select>
<!--6. 비밀번호 업데이트 하기    -->
    <update id="updatePassword" parameterType="java.util.Map">
        update users set u_password=#{uPassword} where u_id=#{uId}
    </update>
<!--7. 회원정보 업데이트    -->
    <update id="updateUser" parameterType="com.weaverloft.ganttchart.dto.Users">
        update users set u_name=#{uName}, u_email=#{uEmail}, u_gender=#{uGender}, u_birth=#{uBirth}, u_phone=#{uPhone},u_address=#{uAddress},
                         u_address2=#{uAddress2}, file_no=#{fileNo} where u_id=#{uId}
    </update>
<!--8. 회원 파일번호 업데이트 -->
    <update id="updateFileNo" parameterType="java.util.Map">
        update users set file_no=#{fileNo} where u_id=#{uId}
    </update>
<!--9. 모든 회원 찾기    -->
    <select id="findUserList" resultMap="userWithFile">
        select u.*,f.* from users u
                                join files f on u.file_no=f.file_no
    </select>
<!--9-1. 전체 회원 수    -->
    <select id="countUser" parameterType="java.lang.String" resultType="java.lang.Integer">
        select count(*) from users
        where 1=1
        <if test="keyword != null">
            and (u_id like '%'||#{keyword}||'%' or u_name like '%'||#{keyword}||'%')
        </if>
    </select>
<!--9-2. 전처리 된 회원리스트 찾기    -->
    <select id="findUserList2" parameterType="java.util.Map" resultType="com.weaverloft.ganttchart.dto.Users">
        select *
            from(select rownum idx, u.*
                    from (select *
                            from users
        ORDER BY u_create_date
        <if test="filterType != null  and filterType != ''">
            ,${filterType} ${ascDesc}
        </if>) u
                    where 1=1
                    <if test="keyword != null">
                    and (u_id like '%'||#{keyword}||'%' or u_name like '%'||#{keyword}||'%')
                    </if>

                ) afteru
        <![CDATA[ where idx >= #{contentBegin} and idx <= #{contentEnd} ]]>

    </select>
</mapper>

