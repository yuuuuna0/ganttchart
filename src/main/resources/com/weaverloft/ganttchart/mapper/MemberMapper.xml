<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.weaverloft.ganttchart.mapper.MemberMapper">
<!--    1. 회원생성-->
    <insert id="createMember" parameterType="com.weaverloft.ganttchart.dto.Member">
        insert into MEMBER(m_id, m_password, m_name, m_email, m_gender, m_phone, m_regi_date, m_ex_date, m_addr, m_addr2, m_type_no, m_status_no, ufile_no,M_AUTH_CODE,M_BIRTH)
        VALUES(#{mId},#{mPassword},#{mName},#{mEmail},#{mGender},#{mPhone},sysdate,#{mExDate},#{mAddr},#{mAddr2},#{mTypeNo},#{mStatusNo},#{ufileNo},#{mAuthCode},#{mBirth})
    </insert>
<!--    2. 아이디로 회원 1명 조회-->
    <select id="findMemberById" parameterType="java.lang.String" resultType="com.weaverloft.ganttchart.dto.Member">
        select m_id, m_password, m_name, m_email, m_gender, m_phone, m_regi_date, m_ex_date, m_addr, m_addr2, m_type_no, m_status_no, ufile_no
        from MEMBER
        where m_id = #{mId}
    </select>
<!--    3. 회원 전체 조회-->
    <select id="findAllMember" resultType="com.weaverloft.ganttchart.dto.Member">
        select m_id, m_password, m_name, m_email, m_gender, m_phone, m_regi_date, m_ex_date, m_addr, m_addr2, m_type_no, m_status_no, ufile_no
        from MEMBER
    </select>
<!--    4. 전체 회원 수 조회-->
    <select id="findAllMemberCount" resultType="java.lang.Integer">
        select count(*)
        from MEMBER
    </select>
<!--    5. 회원 상태 변경-->
    <update id="updateMemberStatus" parameterType="java.util.Map">
        update MEMBER
        set M_ID=#{mID}, M_STATUS_NO=#{mStatusNo}
    </update>
<!--    6. 회원 완전삭제-->
    <delete id="deleteMember" parameterType="java.lang.String">
        delete MEMBER
        where m_id=#{mId}
    </delete>
<!--    7. 이름, 이메일로 아이디 일부 찾기 : 일부만 찾는 식 추가해야함-->
    <select id="findIdPart" parameterType="java.util.Map" resultType="java.lang.String">
        select substr(M_ID,1,3) || RPAD('*',length(M_ID)-3,'*')
        from MEMBER
        where M_NAME=#{mName} and M_EMAIL=#{mEmail}
    </select>
<!--    8. 이름, 이메일로 아이디 전부 찾기-->
    <select id="findId" parameterType="java.util.Map" resultType="java.lang.String">
        select M_ID
        from MEMBER
        where M_NAME=#{mName} and M_EMAIL=#{mEmail}
    </select>
<!--    9. 아이디, 이름, 이메일 일치하는 아이디 임시비번으로 DB 업데이트-->
    <update id="findPassword" parameterType="java.util.Map">
        update MEMBER
        set M_PASSWORD = #{mPassword}
        where M_ID=#{mID} and M_NAME=#{mName} and M_EMAIL=#{mEmail}
    </update>
<!--    10. 회원정보 수정-->
    <update id="updateMemberDetail" parameterType="com.weaverloft.ganttchart.dto.Member">
        update MEMBER
        set m_name=#{mName}, m_email=#{mEmail}, m_gender=#{mGender}, m_phone=#{mPhone}, m_addr=#{mAddr}, m_addr2=#{mAddr2}, ufile_no=#{ufileNo}
        where m_id=#{mId}
    </update>
<!--    11. 비밀번호 일치 확인-->
    <select id="ismatchPassword" parameterType="java.util.Map" resultType="java.lang.Integer">
        select count(*)
        from MEMBER
        where M_ID=#{mId} and M_PASSWORD=#{mPassword}
    </select>
<!--    12. authcode 인증 후 '0'으로 변경하기-->
    <update id="resetAuthCode" parameterType="java.lang.String">
        update MEMBER set M_AUTH_CODE='0' where M_ID=#{mId}
    </update>
</mapper>