<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:security="http://www.springframework.org/schema/security"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security.xsd
       http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd">
    <bean class="org.springframework.security.web.access.expression.DefaultWebSecurityExpressionHandler"/>
    <!-- 보안 미적용 -->
    <security:http pattern="/**/*" security="none" />

    <security:http auto-config="true" use-expressions="true">
        <security:csrf disabled="true"/>
<!--        누구나-->
        <security:intercept-url pattern="/*" access="permitAll"/>
<!--        USER만-->
        <security:intercept-url pattern="/boardWrite" access="hasRole('ROLE_USER')"/>
        <security:intercept-url pattern="/myPage" access="hasRole('ROLE_USER')"/>
        <security:intercept-url pattern="/emailAuth" access="hasRole('ROLE_USER')"/>
        <security:intercept-url pattern="/findId" access="hasRole('ROLE_USER')"/>
        <security:intercept-url pattern="/findPassword" access="hasRole('ROLE_USER')"/>
        <security:intercept-url pattern="/modify" access="hasRole('ROLE_USER')"/>
<!--        ADMIN 권한-->
        <security:intercept-url pattern="/admin/**" access="hasRole('ROLE_ADMIN')"/>
<!--        로그인&로그아웃 상세 ==> default-target-url:로그인 성공시 이동할 사이트 -->
        <security:form-login login-page="/login" default-target-url="/" username-parameter="id" password-parameter="password"/>
        <security:logout logout-url="/*" logout-success-url="/logout-action"/>
        <security:access-denied-handler error-page="/accessDenied"/>
    </security:http>
<!--    데이터베이스 연결-->
    <bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
        <property name="driverClassName" value="oracle.jdbc.driver.OracleDriver" />
        <property name="url" value="jdbc:oracle:thin:@localhost:1521:XE" />
        <property name="username" value="c##gantt" />
        <property name="password" value="1234" />
    </bean>
<!--    사용자 세부 계정 서비스-->
    <bean id="userDetailsService" class="org.springframework.security.core.userdetails.jdbc.JdbcDaoImpl">
        <property name="dataSource" ref="dataSource" />
        <property name="usersByUsernameQuery" value="select id,password,grade from users where id = ?" />
        <property name="authoritiesByUsernameQuery" value="select id,grade from users where id = ?" />
    </bean>
<!--    Provider-->
    <security:authentication-manager>
        <security:authentication-provider user-service-ref="userDetailsService">
<!--            <security:user-service>-->
<!--                <security:user name="user" password="{noop}password" authorities="ROLE_USER"/>-->
<!--                <security:user name="admin" password="{noop}password" authorities="ROLE_ADMIN"/>-->
<!--            </security:user-service>-->
            <security:password-encoder ref="passwordEncoder"/>
        </security:authentication-provider>
    </security:authentication-manager>
<!--    암호화패키지-->
    <bean id="passwordEncoder" class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder"/>

</beans>